version: '3.5'
services:
  mongo_primary:
    container_name: 'mongo_primary'
    image: 'bitnami/mongodb:latest'
    restart: always
    volumes:
      - ./db/mongo/primary/db:/bitnami
    ports:
      - '6610:27017'
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
    networks:
      - backend
  mongo_secondary:
    container_name: 'mongo_secondary'
    image: 'bitnami/mongodb:latest'
    restart: always
    volumes:
      - ./db/mongo/secondary/db:/bitnami
    ports:
      - '6611:27017'
    environment:
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb_primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
    networks:
      - backend
  mongodb_arbiter:
    container_name: 'mongo_arbiter'
    image: 'bitnami/mongodb:latest'
    restart: always
    volumes:
      - ./db/mongo/arbiter/db:/bitnami
    ports:
      - '6612:27017'
    environment:
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_PRIMARY_HOST=mongodb_primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
    networks:
      - backend
  mysql:
    image: 'mysql:8.0.13'
    restart: always
    ports:
      - '6620:3306'
    volumes:
      - ./db/mysql/data/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
    networks:
      - backend
  redis:
    image: 'redis:5'
    restart: always
    ports:
      - '6630:6379'
    volumes:
      - ./db/redis:/data
    networks:
      - backend
  minio:
    image: 'minio/minio'
    ports:
      - '6640:9000'
    volumes:
      - ./db/minio:/data
    environment:
      MINIO_ACCESS_KEY: caseywang
      MINIO_SECRET_KEY: wangyang_1991
    command: 'server /data'
    networks:
      - frontend
      - backend
networks:
  frontend:
    name: blog_frontend
    driver: bridge
  backend:
    name: blog_backend
    driver: bridge
